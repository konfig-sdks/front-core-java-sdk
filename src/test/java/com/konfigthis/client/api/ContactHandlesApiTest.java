/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.ContactHandle;
import com.konfigthis.client.model.DeleteContactHandle;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for ContactHandlesApi
 */
@Disabled
public class ContactHandlesApiTest {

    private static ContactHandlesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new ContactHandlesApi(apiClient);
    }

    /**
     * Add contact handle
     *
     * Adds a new handle to a contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addNewHandleTest() throws ApiException {
        String handle = null;
        String source = null;
        String contactId = null;
        api.addNewHandle(handle, source, contactId)
                .execute();
        // TODO: test validations
    }

    /**
     * Delete contact handle
     *
     * Remove a handle from a contact.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeHandleTest() throws ApiException {
        String contactId = null;
        String handle = null;
        String source = null;
        Boolean force = null;
        api.removeHandle(contactId)
                .handle(handle)
                .source(source)
                .force(force)
                .execute();
        // TODO: test validations
    }

}
