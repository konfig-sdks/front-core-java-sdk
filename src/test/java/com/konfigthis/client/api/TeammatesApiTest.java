/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.CommentsListMentionedTeammatesResponse;
import com.konfigthis.client.model.ContactsListConversationsReverseChronologicalOrderResponse;
import com.konfigthis.client.model.ConversationsListInboxesResponse;
import com.konfigthis.client.model.TeammateResponse;
import com.konfigthis.client.model.UpdateTeammate;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeammatesApi
 */
@Disabled
public class TeammatesApiTest {

    private static TeammatesApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TeammatesApi(apiClient);
    }

    /**
     * List teammate inboxes
     *
     * Returns list of inboxes the teammate has access to.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getInboxListTest() throws ApiException {
        String teammateId = null;
        ConversationsListInboxesResponse response = api.getInboxList(teammateId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get teammate
     *
     * Fetch a teammate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getTeammateByIdTest() throws ApiException {
        String teammateId = null;
        TeammateResponse response = api.getTeammateById(teammateId)
                .execute();
        // TODO: test validations
    }

    /**
     * List assigned conversations
     *
     * List the conversations assigned to a teammate in reverse chronological order (most recently updated first). For more advanced filtering, see the [search endpoint](https://dev.frontapp.com/reference/conversations#search-conversations). 
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listAssignedConversationsTest() throws ApiException {
        String teammateId = null;
        String q = null;
        Integer limit = null;
        String pageToken = null;
        ContactsListConversationsReverseChronologicalOrderResponse response = api.listAssignedConversations(teammateId)
                .q(q)
                .limit(limit)
                .pageToken(pageToken)
                .execute();
        // TODO: test validations
    }

    /**
     * List teammates
     *
     * List the teammates in the company.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listCompanyMembersTest() throws ApiException {
        CommentsListMentionedTeammatesResponse response = api.listCompanyMembers()
                .execute();
        // TODO: test validations
    }

    /**
     * Update teammate
     *
     * Update a teammate.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void updateTeammateTest() throws ApiException {
        String teammateId = null;
        String username = null;
        String firstName = null;
        String lastName = null;
        Boolean isAvailable = null;
        Object customFields = null;
        api.updateTeammate(teammateId)
                .username(username)
                .firstName(firstName)
                .lastName(lastName)
                .isAvailable(isAvailable)
                .customFields(customFields)
                .execute();
        // TODO: test validations
    }

}
