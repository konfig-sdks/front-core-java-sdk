/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.model.TeammateIds;
import com.konfigthis.client.model.TeamsListTeamsResponse;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;
import org.junit.jupiter.api.BeforeAll;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for TeamsApi
 */
@Disabled
public class TeamsApiTest {

    private static TeamsApi api;

    
    @BeforeAll
    public static void beforeClass() {
        ApiClient apiClient = Configuration.getDefaultApiClient();
        api = new TeamsApi(apiClient);
    }

    /**
     * Add teammates to team
     *
     * Add one or more teammates to a team (workspace).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void addTeammatesTest() throws ApiException {
        List<String> teammateIds = null;
        String teamId = null;
        api.addTeammates(teammateIds, teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * Get team
     *
     * Fetch a team (workspace).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void getWorkspaceTest() throws ApiException {
        String teamId = null;
        Object response = api.getWorkspace(teamId)
                .execute();
        // TODO: test validations
    }

    /**
     * List teams
     *
     * List the teams (workspaces) in the company.
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void listTeamsTest() throws ApiException {
        TeamsListTeamsResponse response = api.listTeams()
                .execute();
        // TODO: test validations
    }

    /**
     * Remove teammates from team
     *
     * Remove one or more teammates from a team (workspace). Alternatively, you can supply emails as a [resource alias](https://dev.frontapp.com/docs/resource-aliases-1).
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void removeTeammatesTest() throws ApiException {
        List<String> teammateIds = null;
        String teamId = null;
        api.removeTeammates(teammateIds, teamId)
                .execute();
        // TODO: test validations
    }

}
