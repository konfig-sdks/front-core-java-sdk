/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AnalyticsScalarType
 */
@JsonAdapter(AnalyticsScalarType.Adapter.class)public enum AnalyticsScalarType {
  
  NUMBER("number"),
  
  PERCENTAGE("percentage"),
  
  STRING("string"),
  
  DURATION("duration");

  private String value;

  AnalyticsScalarType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AnalyticsScalarType fromValue(String value) {
    for (AnalyticsScalarType b : AnalyticsScalarType.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AnalyticsScalarType> {
    @Override
    public void write(final JsonWriter jsonWriter, final AnalyticsScalarType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AnalyticsScalarType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AnalyticsScalarType.fromValue(value);
    }
  }
}

