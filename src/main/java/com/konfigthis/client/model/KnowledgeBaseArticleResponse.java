/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.konfigthis.client.model.Attachment;
import com.konfigthis.client.model.KnowledgeBaseArticleResponseLinks;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * KnowledgeBaseArticleResponse
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class KnowledgeBaseArticleResponse {
  public static final String SERIALIZED_NAME_LINKS = "_links";
  @SerializedName(SERIALIZED_NAME_LINKS)
  private KnowledgeBaseArticleResponseLinks links;

  public static final String SERIALIZED_NAME_ID = "id";
  @SerializedName(SERIALIZED_NAME_ID)
  private String id;

  public static final String SERIALIZED_NAME_NAME = "name";
  @SerializedName(SERIALIZED_NAME_NAME)
  private String name;

  public static final String SERIALIZED_NAME_STATUS = "status";
  @SerializedName(SERIALIZED_NAME_STATUS)
  private String status;

  public static final String SERIALIZED_NAME_KEYWORDS = "keywords";
  @SerializedName(SERIALIZED_NAME_KEYWORDS)
  private List<Object> keywords = null;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public static final String SERIALIZED_NAME_LOCALE = "locale";
  @SerializedName(SERIALIZED_NAME_LOCALE)
  private String locale;

  public static final String SERIALIZED_NAME_ATTACHMENTS = "attachments";
  @SerializedName(SERIALIZED_NAME_ATTACHMENTS)
  private List<Attachment> attachments = null;

  public static final String SERIALIZED_NAME_LAST_EDITED_AT = "last_edited_at";
  @SerializedName(SERIALIZED_NAME_LAST_EDITED_AT)
  private Double lastEditedAt;

  public static final String SERIALIZED_NAME_CREATED_AT = "created_at";
  @SerializedName(SERIALIZED_NAME_CREATED_AT)
  private Double createdAt;

  public static final String SERIALIZED_NAME_UPDATED_AT = "updated_at";
  @SerializedName(SERIALIZED_NAME_UPDATED_AT)
  private Double updatedAt;

  public KnowledgeBaseArticleResponse() {
  }

  public KnowledgeBaseArticleResponse links(KnowledgeBaseArticleResponseLinks links) {
    
    
    
    
    this.links = links;
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public KnowledgeBaseArticleResponseLinks getLinks() {
    return links;
  }


  public void setLinks(KnowledgeBaseArticleResponseLinks links) {
    
    
    
    this.links = links;
  }


  public KnowledgeBaseArticleResponse id(String id) {
    
    
    
    
    this.id = id;
    return this;
  }

   /**
   * Unique identifier of the knowledge base article
   * @return id
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "kba_12", value = "Unique identifier of the knowledge base article")

  public String getId() {
    return id;
  }


  public void setId(String id) {
    
    
    
    this.id = id;
  }


  public KnowledgeBaseArticleResponse name(String name) {
    
    
    
    
    this.name = name;
    return this;
  }

   /**
   * Name of the article
   * @return name
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "Billing 101", value = "Name of the article")

  public String getName() {
    return name;
  }


  public void setName(String name) {
    
    
    
    this.name = name;
  }


  public KnowledgeBaseArticleResponse status(String status) {
    
    
    
    
    this.status = status;
    return this;
  }

   /**
   * Status of the article
   * @return status
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "published", value = "Status of the article")

  public String getStatus() {
    return status;
  }


  public void setStatus(String status) {
    
    
    
    this.status = status;
  }


  public KnowledgeBaseArticleResponse keywords(List<Object> keywords) {
    
    
    
    
    this.keywords = keywords;
    return this;
  }

  public KnowledgeBaseArticleResponse addKeywordsItem(Object keywordsItem) {
    if (this.keywords == null) {
      this.keywords = new ArrayList<>();
    }
    this.keywords.add(keywordsItem);
    return this;
  }

   /**
   * Article keywords
   * @return keywords
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "[\"billing\",\"returns\"]", value = "Article keywords")

  public List<Object> getKeywords() {
    return keywords;
  }


  public void setKeywords(List<Object> keywords) {
    
    
    
    this.keywords = keywords;
  }


  public KnowledgeBaseArticleResponse content(String content) {
    
    
    
    
    this.content = content;
    return this;
  }

   /**
   * Article HTML content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "<h1>How to process a return</h1><p>To process a return...</p>", value = "Article HTML content")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    
    
    
    this.content = content;
  }


  public KnowledgeBaseArticleResponse locale(String locale) {
    
    
    
    
    this.locale = locale;
    return this;
  }

   /**
   * Locale of the article
   * @return locale
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "en", value = "Locale of the article")

  public String getLocale() {
    return locale;
  }


  public void setLocale(String locale) {
    
    
    
    this.locale = locale;
  }


  public KnowledgeBaseArticleResponse attachments(List<Attachment> attachments) {
    
    
    
    
    this.attachments = attachments;
    return this;
  }

  public KnowledgeBaseArticleResponse addAttachmentsItem(Attachment attachmentsItem) {
    if (this.attachments == null) {
      this.attachments = new ArrayList<>();
    }
    this.attachments.add(attachmentsItem);
    return this;
  }

   /**
   * List of files attached to the article
   * @return attachments
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "List of files attached to the article")

  public List<Attachment> getAttachments() {
    return attachments;
  }


  public void setAttachments(List<Attachment> attachments) {
    
    
    
    this.attachments = attachments;
  }


  public KnowledgeBaseArticleResponse lastEditedAt(Double lastEditedAt) {
    
    
    
    
    this.lastEditedAt = lastEditedAt;
    return this;
  }

  public KnowledgeBaseArticleResponse lastEditedAt(Integer lastEditedAt) {
    
    
    
    
    this.lastEditedAt = lastEditedAt.doubleValue();
    return this;
  }

   /**
   * Timestamp when the article was last edited
   * @return lastEditedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1622672452.363", value = "Timestamp when the article was last edited")

  public Double getLastEditedAt() {
    return lastEditedAt;
  }


  public void setLastEditedAt(Double lastEditedAt) {
    
    
    
    this.lastEditedAt = lastEditedAt;
  }


  public KnowledgeBaseArticleResponse createdAt(Double createdAt) {
    
    
    
    
    this.createdAt = createdAt;
    return this;
  }

  public KnowledgeBaseArticleResponse createdAt(Integer createdAt) {
    
    
    
    
    this.createdAt = createdAt.doubleValue();
    return this;
  }

   /**
   * Timestamp when the article was created
   * @return createdAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1622672452.363", value = "Timestamp when the article was created")

  public Double getCreatedAt() {
    return createdAt;
  }


  public void setCreatedAt(Double createdAt) {
    
    
    
    this.createdAt = createdAt;
  }


  public KnowledgeBaseArticleResponse updatedAt(Double updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt;
    return this;
  }

  public KnowledgeBaseArticleResponse updatedAt(Integer updatedAt) {
    
    
    
    
    this.updatedAt = updatedAt.doubleValue();
    return this;
  }

   /**
   * Timestamp when the article was updated
   * @return updatedAt
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1654309308.278", value = "Timestamp when the article was updated")

  public Double getUpdatedAt() {
    return updatedAt;
  }


  public void setUpdatedAt(Double updatedAt) {
    
    
    
    this.updatedAt = updatedAt;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the KnowledgeBaseArticleResponse instance itself
   */
  public KnowledgeBaseArticleResponse putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KnowledgeBaseArticleResponse knowledgeBaseArticleResponse = (KnowledgeBaseArticleResponse) o;
    return Objects.equals(this.links, knowledgeBaseArticleResponse.links) &&
        Objects.equals(this.id, knowledgeBaseArticleResponse.id) &&
        Objects.equals(this.name, knowledgeBaseArticleResponse.name) &&
        Objects.equals(this.status, knowledgeBaseArticleResponse.status) &&
        Objects.equals(this.keywords, knowledgeBaseArticleResponse.keywords) &&
        Objects.equals(this.content, knowledgeBaseArticleResponse.content) &&
        Objects.equals(this.locale, knowledgeBaseArticleResponse.locale) &&
        Objects.equals(this.attachments, knowledgeBaseArticleResponse.attachments) &&
        Objects.equals(this.lastEditedAt, knowledgeBaseArticleResponse.lastEditedAt) &&
        Objects.equals(this.createdAt, knowledgeBaseArticleResponse.createdAt) &&
        Objects.equals(this.updatedAt, knowledgeBaseArticleResponse.updatedAt)&&
        Objects.equals(this.additionalProperties, knowledgeBaseArticleResponse.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(links, id, name, status, keywords, content, locale, attachments, lastEditedAt, createdAt, updatedAt, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KnowledgeBaseArticleResponse {\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    keywords: ").append(toIndentedString(keywords)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    sb.append("    attachments: ").append(toIndentedString(attachments)).append("\n");
    sb.append("    lastEditedAt: ").append(toIndentedString(lastEditedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("_links");
    openapiFields.add("id");
    openapiFields.add("name");
    openapiFields.add("status");
    openapiFields.add("keywords");
    openapiFields.add("content");
    openapiFields.add("locale");
    openapiFields.add("attachments");
    openapiFields.add("last_edited_at");
    openapiFields.add("created_at");
    openapiFields.add("updated_at");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KnowledgeBaseArticleResponse
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KnowledgeBaseArticleResponse.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KnowledgeBaseArticleResponse is not found in the empty JSON string", KnowledgeBaseArticleResponse.openapiRequiredFields.toString()));
        }
      }
      // validate the optional field `_links`
      if (jsonObj.get("_links") != null && !jsonObj.get("_links").isJsonNull()) {
        KnowledgeBaseArticleResponseLinks.validateJsonObject(jsonObj.getAsJsonObject("_links"));
      }
      if ((jsonObj.get("id") != null && !jsonObj.get("id").isJsonNull()) && !jsonObj.get("id").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `id` to be a primitive type in the JSON string but got `%s`", jsonObj.get("id").toString()));
      }
      if ((jsonObj.get("name") != null && !jsonObj.get("name").isJsonNull()) && !jsonObj.get("name").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `name` to be a primitive type in the JSON string but got `%s`", jsonObj.get("name").toString()));
      }
      if ((jsonObj.get("status") != null && !jsonObj.get("status").isJsonNull()) && !jsonObj.get("status").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `status` to be a primitive type in the JSON string but got `%s`", jsonObj.get("status").toString()));
      }
      // ensure the optional json data is an array if present
      if (jsonObj.get("keywords") != null && !jsonObj.get("keywords").isJsonArray()) {
        throw new IllegalArgumentException(String.format("Expected the field `keywords` to be an array in the JSON string but got `%s`", jsonObj.get("keywords").toString()));
      }
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
      if ((jsonObj.get("locale") != null && !jsonObj.get("locale").isJsonNull()) && !jsonObj.get("locale").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `locale` to be a primitive type in the JSON string but got `%s`", jsonObj.get("locale").toString()));
      }
      if (jsonObj.get("attachments") != null && !jsonObj.get("attachments").isJsonNull()) {
        JsonArray jsonArrayattachments = jsonObj.getAsJsonArray("attachments");
        if (jsonArrayattachments != null) {
          // ensure the json data is an array
          if (!jsonObj.get("attachments").isJsonArray()) {
            throw new IllegalArgumentException(String.format("Expected the field `attachments` to be an array in the JSON string but got `%s`", jsonObj.get("attachments").toString()));
          }

          // validate the optional field `attachments` (array)
          for (int i = 0; i < jsonArrayattachments.size(); i++) {
            Attachment.validateJsonObject(jsonArrayattachments.get(i).getAsJsonObject());
          };
        }
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KnowledgeBaseArticleResponse.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KnowledgeBaseArticleResponse' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KnowledgeBaseArticleResponse> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KnowledgeBaseArticleResponse.class));

       return (TypeAdapter<T>) new TypeAdapter<KnowledgeBaseArticleResponse>() {
           @Override
           public void write(JsonWriter out, KnowledgeBaseArticleResponse value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public KnowledgeBaseArticleResponse read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             KnowledgeBaseArticleResponse instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KnowledgeBaseArticleResponse given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KnowledgeBaseArticleResponse
  * @throws IOException if the JSON string is invalid with respect to KnowledgeBaseArticleResponse
  */
  public static KnowledgeBaseArticleResponse fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KnowledgeBaseArticleResponse.class);
  }

 /**
  * Convert an instance of KnowledgeBaseArticleResponse to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

