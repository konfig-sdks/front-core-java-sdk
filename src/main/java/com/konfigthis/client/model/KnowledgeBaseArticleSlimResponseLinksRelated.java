/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import org.apache.commons.lang3.StringUtils;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.konfigthis.client.JSON;

/**
 * KnowledgeBaseArticleSlimResponseLinksRelated
 */@javax.annotation.Generated(value = "Generated by https://konfigthis.com")
public class KnowledgeBaseArticleSlimResponseLinksRelated {
  public static final String SERIALIZED_NAME_KNOWLEDGE_BASE = "knowledge_base";
  @SerializedName(SERIALIZED_NAME_KNOWLEDGE_BASE)
  private String knowledgeBase;

  public static final String SERIALIZED_NAME_CATEGORY = "category";
  @SerializedName(SERIALIZED_NAME_CATEGORY)
  private String category;

  public static final String SERIALIZED_NAME_CONTENT = "content";
  @SerializedName(SERIALIZED_NAME_CONTENT)
  private String content;

  public KnowledgeBaseArticleSlimResponseLinksRelated() {
  }

  public KnowledgeBaseArticleSlimResponseLinksRelated knowledgeBase(String knowledgeBase) {
    
    
    
    
    this.knowledgeBase = knowledgeBase;
    return this;
  }

   /**
   * Link to the article&#39;s knowledge base
   * @return knowledgeBase
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://yourCompany.api.frontapp.com/knowledge_bases/knb_12", value = "Link to the article's knowledge base")

  public String getKnowledgeBase() {
    return knowledgeBase;
  }


  public void setKnowledgeBase(String knowledgeBase) {
    
    
    
    this.knowledgeBase = knowledgeBase;
  }


  public KnowledgeBaseArticleSlimResponseLinksRelated category(String category) {
    
    
    
    
    this.category = category;
    return this;
  }

   /**
   * Link to the article&#39;s category
   * @return category
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://yourCompany.api.frontapp.com/knowledge_base_category/kbc_12", value = "Link to the article's category")

  public String getCategory() {
    return category;
  }


  public void setCategory(String category) {
    
    
    
    this.category = category;
  }


  public KnowledgeBaseArticleSlimResponseLinksRelated content(String content) {
    
    
    
    
    this.content = content;
    return this;
  }

   /**
   * Link to the article&#39;s content
   * @return content
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "https://yourCompany.api.frontapp.com/knowledge_base_articles/kba_12/content", value = "Link to the article's content")

  public String getContent() {
    return content;
  }


  public void setContent(String content) {
    
    
    
    this.content = content;
  }

  /**
   * A container for additional, undeclared properties.
   * This is a holder for any undeclared properties as specified with
   * the 'additionalProperties' keyword in the OAS document.
   */
  private Map<String, Object> additionalProperties;

  /**
   * Set the additional (undeclared) property with the specified name and value.
   * If the property does not already exist, create it otherwise replace it.
   *
   * @param key name of the property
   * @param value value of the property
   * @return the KnowledgeBaseArticleSlimResponseLinksRelated instance itself
   */
  public KnowledgeBaseArticleSlimResponseLinksRelated putAdditionalProperty(String key, Object value) {
    if (this.additionalProperties == null) {
        this.additionalProperties = new HashMap<String, Object>();
    }
    this.additionalProperties.put(key, value);
    return this;
  }

  /**
   * Return the additional (undeclared) property.
   *
   * @return a map of objects
   */
  public Map<String, Object> getAdditionalProperties() {
    return additionalProperties;
  }

  /**
   * Return the additional (undeclared) property with the specified name.
   *
   * @param key name of the property
   * @return an object
   */
  public Object getAdditionalProperty(String key) {
    if (this.additionalProperties == null) {
        return null;
    }
    return this.additionalProperties.get(key);
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    KnowledgeBaseArticleSlimResponseLinksRelated knowledgeBaseArticleSlimResponseLinksRelated = (KnowledgeBaseArticleSlimResponseLinksRelated) o;
    return Objects.equals(this.knowledgeBase, knowledgeBaseArticleSlimResponseLinksRelated.knowledgeBase) &&
        Objects.equals(this.category, knowledgeBaseArticleSlimResponseLinksRelated.category) &&
        Objects.equals(this.content, knowledgeBaseArticleSlimResponseLinksRelated.content)&&
        Objects.equals(this.additionalProperties, knowledgeBaseArticleSlimResponseLinksRelated.additionalProperties);
  }

  @Override
  public int hashCode() {
    return Objects.hash(knowledgeBase, category, content, additionalProperties);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class KnowledgeBaseArticleSlimResponseLinksRelated {\n");
    sb.append("    knowledgeBase: ").append(toIndentedString(knowledgeBase)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    content: ").append(toIndentedString(content)).append("\n");
    sb.append("    additionalProperties: ").append(toIndentedString(additionalProperties)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("knowledge_base");
    openapiFields.add("category");
    openapiFields.add("content");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to KnowledgeBaseArticleSlimResponseLinksRelated
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (!KnowledgeBaseArticleSlimResponseLinksRelated.openapiRequiredFields.isEmpty()) { // has required fields but JSON object is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in KnowledgeBaseArticleSlimResponseLinksRelated is not found in the empty JSON string", KnowledgeBaseArticleSlimResponseLinksRelated.openapiRequiredFields.toString()));
        }
      }
      if ((jsonObj.get("knowledge_base") != null && !jsonObj.get("knowledge_base").isJsonNull()) && !jsonObj.get("knowledge_base").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `knowledge_base` to be a primitive type in the JSON string but got `%s`", jsonObj.get("knowledge_base").toString()));
      }
      if ((jsonObj.get("category") != null && !jsonObj.get("category").isJsonNull()) && !jsonObj.get("category").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `category` to be a primitive type in the JSON string but got `%s`", jsonObj.get("category").toString()));
      }
      if ((jsonObj.get("content") != null && !jsonObj.get("content").isJsonNull()) && !jsonObj.get("content").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `content` to be a primitive type in the JSON string but got `%s`", jsonObj.get("content").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!KnowledgeBaseArticleSlimResponseLinksRelated.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'KnowledgeBaseArticleSlimResponseLinksRelated' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<KnowledgeBaseArticleSlimResponseLinksRelated> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(KnowledgeBaseArticleSlimResponseLinksRelated.class));

       return (TypeAdapter<T>) new TypeAdapter<KnowledgeBaseArticleSlimResponseLinksRelated>() {
           @Override
           public void write(JsonWriter out, KnowledgeBaseArticleSlimResponseLinksRelated value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             obj.remove("additionalProperties");
             // serialize additonal properties
             if (value.getAdditionalProperties() != null) {
               for (Map.Entry<String, Object> entry : value.getAdditionalProperties().entrySet()) {
                 if (entry.getValue() instanceof String)
                   obj.addProperty(entry.getKey(), (String) entry.getValue());
                 else if (entry.getValue() instanceof Number)
                   obj.addProperty(entry.getKey(), (Number) entry.getValue());
                 else if (entry.getValue() instanceof Boolean)
                   obj.addProperty(entry.getKey(), (Boolean) entry.getValue());
                 else if (entry.getValue() instanceof Character)
                   obj.addProperty(entry.getKey(), (Character) entry.getValue());
                 else {
                   obj.add(entry.getKey(), gson.toJsonTree(entry.getValue()).getAsJsonObject());
                 }
               }
             }
             elementAdapter.write(out, obj);
           }

           @Override
           public KnowledgeBaseArticleSlimResponseLinksRelated read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             // store additional fields in the deserialized instance
             KnowledgeBaseArticleSlimResponseLinksRelated instance = thisAdapter.fromJsonTree(jsonObj);
             for (Map.Entry<String, JsonElement> entry : jsonObj.entrySet()) {
               if (!openapiFields.contains(entry.getKey())) {
                 if (entry.getValue().isJsonPrimitive()) { // primitive type
                   if (entry.getValue().getAsJsonPrimitive().isString())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsString());
                   else if (entry.getValue().getAsJsonPrimitive().isNumber())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsNumber());
                   else if (entry.getValue().getAsJsonPrimitive().isBoolean())
                     instance.putAdditionalProperty(entry.getKey(), entry.getValue().getAsBoolean());
                   else
                     throw new IllegalArgumentException(String.format("The field `%s` has unknown primitive type. Value: %s", entry.getKey(), entry.getValue().toString()));
                 } else if (entry.getValue().isJsonArray()) {
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), List.class));
                 } else { // JSON object
                     instance.putAdditionalProperty(entry.getKey(), gson.fromJson(entry.getValue(), HashMap.class));
                 }
               }
             }
             return instance;
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of KnowledgeBaseArticleSlimResponseLinksRelated given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of KnowledgeBaseArticleSlimResponseLinksRelated
  * @throws IOException if the JSON string is invalid with respect to KnowledgeBaseArticleSlimResponseLinksRelated
  */
  public static KnowledgeBaseArticleSlimResponseLinksRelated fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, KnowledgeBaseArticleSlimResponseLinksRelated.class);
  }

 /**
  * Convert an instance of KnowledgeBaseArticleSlimResponseLinksRelated to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

