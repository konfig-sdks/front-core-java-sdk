/*
 * Core API
 * Front is a customer operations platform that enables support, sales, and account management teams to deliver exceptional service at scale. Front streamlines customer communication by combining the efficiency of a help desk and the familiarity of email, with automated workflows and real-time collaboration behind the scenes.  With Front, teams can centralize messages across channels, route them to the right person, and unlock visibility and insights across all of their customer operations. More than 8000 businesses use Front to drive operational efficiency that prevents churn, improves retention, and propels customer growth.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by Konfig (https://konfigthis.com).
 * Do not edit the class manually.
 */


package com.konfigthis.client.api;

import com.konfigthis.client.ApiCallback;
import com.konfigthis.client.ApiClient;
import com.konfigthis.client.ApiException;
import com.konfigthis.client.ApiResponse;
import com.konfigthis.client.Configuration;
import com.konfigthis.client.Pair;
import com.konfigthis.client.ProgressRequestBody;
import com.konfigthis.client.ProgressResponseBody;

import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.konfigthis.client.model.CustomFieldsListAccountCustomFieldsResponse;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class CustomFieldsApiGenerated {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public CustomFieldsApiGenerated() throws IllegalArgumentException {
        this(Configuration.getDefaultApiClient());
    }

    public CustomFieldsApiGenerated(ApiClient apiClient) throws IllegalArgumentException {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    private okhttp3.Call getListCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/links/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call getListValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return getListCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> getListWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = getListValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call getListAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = getListValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class GetListRequestBuilder {

        private GetListRequestBuilder() {
        }

        /**
         * Build call for getList
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return getListCall(_callback);
        }


        /**
         * Execute getList request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = getListWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute getList request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return getListWithHttpInfo();
        }

        /**
         * Execute getList request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return getListAsync(_callback);
        }
    }

    /**
     * List Link&#39;s custom fields
     * Lists the custom fields that can be attached to a Link.
     * @return GetListRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public GetListRequestBuilder getList() throws IllegalArgumentException {
        return new GetListRequestBuilder();
    }
    private okhttp3.Call listAccountCustomFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/accounts/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listAccountCustomFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listAccountCustomFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listAccountCustomFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listAccountCustomFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listAccountCustomFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listAccountCustomFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListAccountCustomFieldsRequestBuilder {

        private ListAccountCustomFieldsRequestBuilder() {
        }

        /**
         * Build call for listAccountCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listAccountCustomFieldsCall(_callback);
        }


        /**
         * Execute listAccountCustomFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listAccountCustomFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listAccountCustomFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listAccountCustomFieldsWithHttpInfo();
        }

        /**
         * Execute listAccountCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listAccountCustomFieldsAsync(_callback);
        }
    }

    /**
     * List Account&#39;s custom fields
     * Lists the custom fields that can be attached to an Account.
     * @return ListAccountCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public ListAccountCustomFieldsRequestBuilder listAccountCustomFields() throws IllegalArgumentException {
        return new ListAccountCustomFieldsRequestBuilder();
    }
    private okhttp3.Call listContactCustomFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @Deprecated
    @SuppressWarnings("rawtypes")
    private okhttp3.Call listContactCustomFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listContactCustomFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listContactCustomFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listContactCustomFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listContactCustomFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listContactCustomFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListContactCustomFieldsRequestBuilder {

        private ListContactCustomFieldsRequestBuilder() {
        }

        /**
         * Build call for listContactCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         * @deprecated
         */
        @Deprecated
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listContactCustomFieldsCall(_callback);
        }


        /**
         * Execute listContactCustomFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         * @deprecated
         */
        @Deprecated
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listContactCustomFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listContactCustomFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         * @deprecated
         */
        @Deprecated
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listContactCustomFieldsWithHttpInfo();
        }

        /**
         * Execute listContactCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         * @deprecated
         */
        @Deprecated
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listContactCustomFieldsAsync(_callback);
        }
    }

    /**
     * List Contact&#39;s custom fields
     * Lists the custom fields that can be attached to a Contact.  &gt; ⚠️ Deprecated endpoint &gt; &gt; This endpoint has been deprecated. Please use the fully compatible &#x60;GET /contacts/custom_fields&#x60; endpoint instead. 
     * @return ListContactCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     * @deprecated
     */
    @Deprecated
    public ListContactCustomFieldsRequestBuilder listContactCustomFields() throws IllegalArgumentException {
        return new ListContactCustomFieldsRequestBuilder();
    }
    private okhttp3.Call listContactFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/contacts/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listContactFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listContactFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listContactFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listContactFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listContactFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listContactFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListContactFieldsRequestBuilder {

        private ListContactFieldsRequestBuilder() {
        }

        /**
         * Build call for listContactFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listContactFieldsCall(_callback);
        }


        /**
         * Execute listContactFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listContactFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listContactFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listContactFieldsWithHttpInfo();
        }

        /**
         * Execute listContactFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listContactFieldsAsync(_callback);
        }
    }

    /**
     * List Contact&#39;s custom fields
     * Lists the custom fields that can be attached to a Contact.
     * @return ListContactFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public ListContactFieldsRequestBuilder listContactFields() throws IllegalArgumentException {
        return new ListContactFieldsRequestBuilder();
    }
    private okhttp3.Call listConversationCustomFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/conversations/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listConversationCustomFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listConversationCustomFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listConversationCustomFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listConversationCustomFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listConversationCustomFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listConversationCustomFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListConversationCustomFieldsRequestBuilder {

        private ListConversationCustomFieldsRequestBuilder() {
        }

        /**
         * Build call for listConversationCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listConversationCustomFieldsCall(_callback);
        }


        /**
         * Execute listConversationCustomFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listConversationCustomFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listConversationCustomFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listConversationCustomFieldsWithHttpInfo();
        }

        /**
         * Execute listConversationCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listConversationCustomFieldsAsync(_callback);
        }
    }

    /**
     * List Conversation&#39;s custom fields
     * Lists the custom fields that can be attached to a Conversation.
     * @return ListConversationCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public ListConversationCustomFieldsRequestBuilder listConversationCustomFields() throws IllegalArgumentException {
        return new ListConversationCustomFieldsRequestBuilder();
    }
    private okhttp3.Call listInboxCustomFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/inboxes/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listInboxCustomFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listInboxCustomFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listInboxCustomFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listInboxCustomFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listInboxCustomFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listInboxCustomFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListInboxCustomFieldsRequestBuilder {

        private ListInboxCustomFieldsRequestBuilder() {
        }

        /**
         * Build call for listInboxCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listInboxCustomFieldsCall(_callback);
        }


        /**
         * Execute listInboxCustomFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listInboxCustomFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listInboxCustomFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listInboxCustomFieldsWithHttpInfo();
        }

        /**
         * Execute listInboxCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listInboxCustomFieldsAsync(_callback);
        }
    }

    /**
     * List Inbox&#39;s custom fields
     * Lists the custom fields that can be attached to an Inbox.
     * @return ListInboxCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public ListInboxCustomFieldsRequestBuilder listInboxCustomFields() throws IllegalArgumentException {
        return new ListInboxCustomFieldsRequestBuilder();
    }
    private okhttp3.Call listTeammateCustomFieldsCall(final ApiCallback _callback) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/teammates/custom_fields";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        String[] localVarAuthNames = new String[] { "http" };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call listTeammateCustomFieldsValidateBeforeCall(final ApiCallback _callback) throws ApiException {
        return listTeammateCustomFieldsCall(_callback);

    }


    private ApiResponse<CustomFieldsListAccountCustomFieldsResponse> listTeammateCustomFieldsWithHttpInfo() throws ApiException {
        okhttp3.Call localVarCall = listTeammateCustomFieldsValidateBeforeCall(null);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        return localVarApiClient.execute(localVarCall, localVarReturnType);
    }

    private okhttp3.Call listTeammateCustomFieldsAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {

        okhttp3.Call localVarCall = listTeammateCustomFieldsValidateBeforeCall(_callback);
        Type localVarReturnType = new TypeToken<CustomFieldsListAccountCustomFieldsResponse>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public class ListTeammateCustomFieldsRequestBuilder {

        private ListTeammateCustomFieldsRequestBuilder() {
        }

        /**
         * Build call for listTeammateCustomFields
         * @param _callback ApiCallback API callback
         * @return Call to execute
         * @throws ApiException If fail to serialize the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call buildCall(final ApiCallback _callback) throws ApiException {
            return listTeammateCustomFieldsCall(_callback);
        }


        /**
         * Execute listTeammateCustomFields request
         * @return CustomFieldsListAccountCustomFieldsResponse
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public CustomFieldsListAccountCustomFieldsResponse execute() throws ApiException {
            ApiResponse<CustomFieldsListAccountCustomFieldsResponse> localVarResp = listTeammateCustomFieldsWithHttpInfo();
            return localVarResp.getResponseBody();
        }

        /**
         * Execute listTeammateCustomFields request with HTTP info returned
         * @return ApiResponse&lt;CustomFieldsListAccountCustomFieldsResponse&gt;
         * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public ApiResponse<CustomFieldsListAccountCustomFieldsResponse> executeWithHttpInfo() throws ApiException {
            return listTeammateCustomFieldsWithHttpInfo();
        }

        /**
         * Execute listTeammateCustomFields request (asynchronously)
         * @param _callback The callback to be executed when the API call finishes
         * @return The request call
         * @throws ApiException If fail to process the API call, e.g. serializing the request body object
         * @http.response.details
         <table summary="Response Details" border="1">
            <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
            <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
         </table>
         */
        public okhttp3.Call executeAsync(final ApiCallback<CustomFieldsListAccountCustomFieldsResponse> _callback) throws ApiException {
            return listTeammateCustomFieldsAsync(_callback);
        }
    }

    /**
     * List Teammate&#39;s custom fields
     * Lists the custom fields that can be attached to a Teammate.
     * @return ListTeammateCustomFieldsRequestBuilder
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> Array of Custom Fields </td><td>  -  </td></tr>
     </table>
     */
    public ListTeammateCustomFieldsRequestBuilder listTeammateCustomFields() throws IllegalArgumentException {
        return new ListTeammateCustomFieldsRequestBuilder();
    }
}
